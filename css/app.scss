// reset css
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
	font-size: 100%;
	font: inherit;
	vertical-align: baseline;
}
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
body {
	line-height: 1;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}
a {
    text-decoration: none;
}

// variables
$url: 'https://mhenphyz.github.io/';

// definicao de cores

$background   :  #282a36;
$background2  :  #21222C;
$current_line :  #44475a;
$selection    :  #44475a;
$foreground   :  #f8f8f2;
$comment      :  #6272a4;
$cyan         :  #8be9fd;
$green        :  #50fa7b;
$orange       :  #ffb86c;
$ping         :  #ff79c6;
$purple       :  #bd93f9;
$red          :  #ff5555;
$yellow       :  #f1fa8c;
$gray         :  #7a7c88;
$white        :  #ffffff;



.text-primary{
    color: $foreground;
}
.text-secondary{
    color: $selection;
}
.text-success{
    color: $green
}
.text-danger{
    color: $red
}
.text-warning{
    color: $yellow
}
.text-info{
    color: $comment
}
.text-light{
    color: $foreground
}
.text-dark{
    color: $background
}
.text-muted{
    color: $gray
}
.text-white{
    color: $white
}
.text-cyan{
  color: $cyan
}

.bg-primary{
    background-color: $background;
}
.bg-secondary{
    background-color: $background2;
}
.bg-success{
    background-color: $green;
}
.bg-danger{
    background-color: $red;
}
.bg-warning{
    background-color: $yellow;
}
.bg-info{
    background-color: $comment;
}
.bg-light{
    background-color: $foreground;
}
.bg-dark{
    background-color: $background;
}
.bg-muted{
    background-color: $gray;
}
.bg-white{
    background-color: $foreground;
}

//fonts

@font-face {
  font-family: ShadowsIntoLight;
  src: url($url + 'assets/fonts/ShadowsIntoLight-Regular.ttf');
}

@font-face {
  font-family: CommicNeue;
  src: url($url + 'assets/fonts/ComicNeue-Light.ttf');
}

// responsividade
// typescript
@function strip-unit($value) {
    @return $value / ($value * 0 + 1);
  }
  
  @mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
    $u1: unit($min-vw);
    $u2: unit($max-vw);
    $u3: unit($min-font-size);
    $u4: unit($max-font-size);
  
    @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
      & {
        font-size: $min-font-size;
        @media screen and (min-width: $min-vw) {
          font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
        }
        @media screen and (min-width: $max-vw) {
          font-size: $max-font-size;
        }
      }
    }
  }

$min_width: 320px;
$max_width: 1920px;
$min_font: 16px;
$max_font: 25px;

html {
  @include fluid-type($min_width, $max_width, $min_font, $max_font);
}

$mod_1: 1.2; // mobile
$mod_2: 1.5; // desktop

h1 {  
  font-size: $mod_1*$mod_1*$mod_1*$mod_1 *1rem; 
  @include fluid-type($min_width, $max_width, $mod_1*$mod_1*$mod_1 *$min_font, $mod_2*$mod_2*$mod_2 *$min_font);
}
h2 {  
  font-size: $mod_1*$mod_1*$mod_1 *1rem; 
  @include fluid-type($min_width, $max_width, $mod_1*$mod_1*$mod_1 *$min_font, $mod_2*$mod_2*$mod_2 *$min_font);
}
h3 { 
  font-size: $mod_1*$mod_1 *1rem;
  @include fluid-type($min_width, $max_width, $mod_1*$mod_1 *$min_font, $mod_2*$mod_2 *$min_font);
}

// page defaults

html{
    width: 100vw;
    height:100vh;
    max-width: 100%;
}

body{
    width: 100%;
    height: 100%;
}

img.fluid {
    width: 100%;
    height: auto;
}

$multiplicator : 2%;
@for $i from 0 to 6{
    .p-#{$i}x{
        padding: $i * $multiplicator;
    }
    .pl-#{$i}x{
        padding-left: $i * $multiplicator;
    }
    .pr-#{$i}x{
        padding-right: $i * $multiplicator;
    }
    .pt-#{$i}x{
        padding-top: $i * $multiplicator;
    }
    .pb-#{$i}x{
        padding-bottom: $i * $multiplicator;
    }
    .pv-#{$i}x{
      padding-right: $i * $multiplicator;
      padding-left: $i * $multiplicator;
    }
    .ph-#{$i}x{
      padding-top: $i * $multiplicator;
      padding-bottom: $i * $multiplicator;
    }
    //margin
    .m-#{$i}x{
        margin: $i * $multiplicator;
    }
    .ml-#{$i}x{
        margin-left: $i * $multiplicator;
    }
    .mr-#{$i}x{
        margin-right: $i * $multiplicator;
    }
    .mt-#{$i}x{
        margin-top: $i * $multiplicator;
    }
    .mb-#{$i}x{
        margin-bottom: $i * $multiplicator;
    }
    .mv-#{$i}x{
      margin-right: $i * $multiplicator;
      margin-left: $i * $multiplicator;
    }
    .mh-#{$i}x{
      margin-top: $i * $multiplicator;
      margin-bottom: $i * $multiplicator;
    }
}

// generate spaces
@for $i from 0 to 4{
  div.spacer-#{$i}x{
    display:block;
    width: 100%;
    height: $i * 5%;
  }
}

// generate width and height percents
@for $i from 0 to 5{
  $value: $i * 25;
  .w-#{$value}{
    width: percentage($value);
  }
}
@for $i from 0 to 5{
  $value: $i * 25;
  .h-#{$value}{
    height: percentage($value);
  }
}

div.logo-box{
  display: flex;
  width: 100%;
  height: 10%;
  justify-content: center;
  align-items: center;
}

// navigation bar

 /* Add a black background color to the top navigation */
 nav {
    background-color: #333;
    overflow: hidden;
    
    a {
        float: left;
        display: block;
        color: $comment;
        text-align: center;
        padding: 14px 16px;

        &:hover {
            background-color: $background;
            color: $foreground;
          }

        &:not(:first-child) {
            display: none;
        }

        &.active {
            background-color: $current_line;
            color: white;
          }

        &.icon {
          float: right;
          display: block;
        } 
    }
    &.responsive {
        position: relative;

        transition: ease-in background-color 1s;
    
        a{
            float: none;
            display: block;
            text-align: left;

            &.icon{
                position: absolute;
                right: 0;
                top: 0;
            }
        }
    
    }
  }

@media screen and (min-width: 600px) {
  nav {
      &.navigation-bar a {
          display: block;

          &:not(:first-child) {
              float: right;
          }

          &.icon{
              display:none;
          }
      }
  }
}

// page

section {
    &.banner{
        width: 100%;
        height: auto;
        display: block;

        .tool{
          width: 100%;
          height: auto;
          text-align: center;

          .tool-body{

             .generatedPassword{
              width: 100%;
              height: auto;
              overflow:hidden;
            }

          }
        }
    }

    &.quote{
        color: $gray;
        font-size: .75rem;
        text-align: center;
    }
}

div.image-set{
    width: 75%;
    max-width: 1200px;
    height: auto;
    position: relative;
    margin: auto;
    display: block;
    padding-top: 40%;

    .mo-fire, img{
        width: 100%;
        height: auto;
        position: absolute;
        top: 0;
    }

    img {

        &[animation='upDownAnimation']{
            animation: 10s ease 0s upDownAnimation;
            animation-iteration-count:infinite;
        }

        &[animation='upDownAnimation2']{
            animation: 15s ease 0s upDownAnimation;
            animation-iteration-count:infinite;
        }

        &[animation='righLeftAnimation']{
            animation: 7s ease 0s righLeftAnimation;
            animation-iteration-count:infinite;
        }

        &[animation='leftRightAnimation']{
            animation: 13s ease-in-out 0s leftRightAnimation;
            animation-iteration-count:infinite;
        }

        &[animation='RightAnimation']{
            animation: 5s ease-in-out 0s RightAnimation;
            animation-iteration-count:infinite;
        }

        &[animation='LeftAnimation']{
            animation: 5s ease-in-out 0s LeftAnimation;
            animation-iteration-count:infinite;
        }

    }
}

@keyframes upDownAnimation {
    0% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-10%);
    }
    100% {
        transform: translateY(0%);
    }
  }

@keyframes righLeftAnimation {
  0% {
    transform: translateX(0);
  }
  50% {
    transform: translateX(8%);
  }
  100% {
      transform: translateX(0);
  }
}

@keyframes leftRightAnimation {
    0% {
      transform: translateX(0);
    }
    25% {
      transform: translateX(-10%);
    }
    75% {
        transform: translateX(10%);
    }
    100% {
        transform: translateX(0);
    }
  }

  @keyframes RightAnimation {
    0% {
      transform: translateX(0);
    }
    50% {
      transform: translateX(3%);
    }
    100% {
        transform: translateX(0);
    }
  }

  @keyframes LeftAnimation {
    0% {
      transform: translateX(0);
    }
    50% {
      transform: translateX(-3%);
    }
    100% {
        transform: translateX(0);
    }
  }



// classes

.card{
  position: relative;
  color: $foreground;
  display:block;
  background-color: $background;
  text-align: center;
  min-height: 150px;
  cursor: pointer;


  &::before{
    content: '';
    position: absolute;
    top:0;
    left:0;
    width: 100%;
    height: 100%;
    opacity: 1;
    box-shadow: -6px -6px 20px rgba(0, 0, 0 , 1),
                 6px 6px 20px rgba(255, 255, 255 , .1);
    transition: opacity 0.3s ease-in-out;
  }

  &::after{
    content: '';
    position: absolute;
    top:0;
    left:0;
    width: 100%;
    height: 100%;
    opacity: 0;
    box-shadow: inset -6px -6px 10px rgba(0, 0, 0 , .5),
                inset 6px 6px 20px rgba(255, 255, 255 , .1);
    transition: opacity 0.3s ease-in-out;
  }

  &:hover{
    color: $green;

    .header > i {
      font-size: 2rem;
    }
    &::before{
      opacity: 0;
    }
    &::after{
      opacity: 1;
    }
  }

  .header{
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 50%;
    position: relative;
    overflow: hidden;

    i {
      font-size: 2.5rem;
      transition: font-size .2s ease;
    }
  }
}

.grid {
  display: grid;
  grid-template-columns: repeat(auto-fit, 30%);
  grid-gap: 15px;
  justify-content: stretch;
}


.slidecontainer {
  width: 100%; 
}

.slider {
  -webkit-appearance: none;  /* Override default CSS styles */
  appearance: none;
  width: 75%;
  height: 3px;
  background: $comment;
  outline: none; 
  opacity: 0.5;
  transition: opacity .2s;

  + #passwdLenght{
    opacity: 0.5;
  }

  &:hover, &:hover + #passwdLenght {
    opacity: 1;
  }

  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 25px;
    height: 25px;
    background: $background;
    cursor: pointer;
  }

  &::-moz-range-thumb {
    width: 15px;
    height: 15px;
    border: none;
    background: $cyan;
    cursor: pointer;
  }  
}

.inputContainer{
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  color: $foreground;
  row-gap: 30%;
  column-gap: 25px;
  padding: 0 20%;

  .inputGroupOptionInput{
    position: relative;
    display: flex;
    flex-wrap: wrap;

    label {
      font-size: 0.9rem;
    }

    input[type=checkbox]{
      position: absolute;
      right: 0;
    }

  }
}

button.submit{
  background-color: $background2;
  border: 0;
  padding: 10px;
  color: $comment;
  cursor: pointer;
  border: solid 1px $comment;

  &:hover{
    color: $cyan;
    border: solid 1px $cyan;
  }
}

.keytable{
  padding: 5%;
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  width: 90%;

  .key{
    display:block;
    padding: 10px;
    color: $comment;
  }
}

input[type=text]{
  background-color: transparent;
  padding: .2rem;
  border: none;
  border-bottom: solid 1px rgba($color: $green, $alpha: 0.5);
  color: $comment;

  &:hover{
    color: $cyan;
    border-color: rgba($color: $green, $alpha: .9);
  }
}